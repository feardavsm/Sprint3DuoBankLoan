<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-P8JIU9Q" ignored="8" name="Sprint 2 Tests" tests="14" failures="1" timestamp="2021-08-18T16:07:30 EDT" time="83.615" errors="0">
  <testcase name="appHealthCheck" time="0.016" classname="tests.LoginTests"/>
  <testcase name="loginWithInvalidPassword" time="0.694" classname="tests.LoginTests"/>
  <testcase name="loginWithInvalidUsername" time="0.713" classname="tests.LoginTests"/>
  <testcase name="loginWithNoCredentials" time="0.121" classname="tests.LoginTests"/>
  <testcase name="loginWithValidCredentials" time="1.162" classname="tests.LoginTests"/>
  <testcase name="verifyWithNoCredentials" time="0.57" classname="tests.PersonalInformationTests">
    <failure type="java.lang.AssertionError" message="Date of birth field is not mandatory. expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Date of birth field is not mandatory. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at tests.PersonalInformationTests.verifyWithNoCredentials(PersonalInformationTests.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
    </failure>
  </testcase> <!-- verifyWithNoCredentials -->
  <testcase name="verifyWithValidCredentials" time="4.574" classname="tests.PersonalInformationTests"/>
  <testcase name="verifyWithValidCredentials" time="3.693" classname="tests.PersonalInformationTests"/>
  <testcase name="verifyWithValidCredentials" time="3.808" classname="tests.PersonalInformationTests"/>
  <testcase name="negativeTestPreApprovalDetailsWithoutData" time="0.526" classname="tests.PreApprovalDetailsTests"/>
  <testcase name="positiveTestPreApprovalDetails" time="1.465" classname="tests.PreApprovalDetailsTests"/>
  <testcase name="signUpWithFaker" time="1.246" classname="tests.SignUpTests"/>
  <testcase name="signUpWithWrongEmailInput" time="0.763" classname="tests.SignUpTests"/>
  <testcase name="signUpWithoutData" time="0.482" classname="tests.SignUpTests"/>
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
</testsuite> <!-- Sprint 2 Tests -->
