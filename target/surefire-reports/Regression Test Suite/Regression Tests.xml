<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-P8JIU9Q" ignored="8" name="Regression Tests" tests="14" failures="1" timestamp="2021-08-20T01:30:27 EDT" time="75.801" errors="0">
  <testcase name="appHealthCheck" time="0.022" classname="tests.LoginTests"/>
  <testcase name="loginWithInvalidPassword" time="0.475" classname="tests.LoginTests"/>
  <testcase name="loginWithInvalidUsername" time="0.531" classname="tests.LoginTests"/>
  <testcase name="loginWithNoCredentials" time="0.143" classname="tests.LoginTests"/>
  <testcase name="loginWithValidCredentials" time="1.223" classname="tests.LoginTests"/>
  <testcase name="verifyWithNoCredentials" time="0.548" classname="tests.PersonalInformationTests">
    <failure type="java.lang.AssertionError" message="Date of birth field is not mandatory. expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Date of birth field is not mandatory. expected [true] but found [false]
at tests.PersonalInformationTests.verifyWithNoCredentials(PersonalInformationTests.java:75)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- verifyWithNoCredentials -->
  <testcase name="verifyWithValidCredentials" time="2.985" classname="tests.PersonalInformationTests"/>
  <testcase name="verifyWithValidCredentials" time="2.534" classname="tests.PersonalInformationTests"/>
  <testcase name="verifyWithValidCredentials" time="2.606" classname="tests.PersonalInformationTests"/>
  <testcase name="negativeTestPreApprovalDetailsWithoutData" time="0.392" classname="tests.PreApprovalDetailsTests"/>
  <testcase name="positiveTestPreApprovalDetails" time="0.988" classname="tests.PreApprovalDetailsTests"/>
  <testcase name="signUpWithFaker" time="0.7" classname="tests.SignUpTests"/>
  <testcase name="signUpWithWrongEmailInput" time="0.485" classname="tests.SignUpTests"/>
  <testcase name="signUpWithoutData" time="0.208" classname="tests.SignUpTests"/>
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@AfterSuite tearDownReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase name="@BeforeSuite setupReport" time="0.0" classname="tests.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
</testsuite> <!-- Regression Tests -->
